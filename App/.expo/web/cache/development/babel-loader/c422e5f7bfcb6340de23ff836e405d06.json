{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\yonimdo\\\\Documents\\\\Workspace\\\\Yonimdo\\\\Parablas\\\\components\\\\pTransparentModal.tsx\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar window = Dimensions.get('window');\nvar width = window.width,\n    height = window.height,\n    scale = window.scale;\n\nvar PModal = function (_React$Component) {\n  _inherits(PModal, _React$Component);\n\n  var _super = _createSuper(PModal);\n\n  function PModal(props) {\n    var _this;\n\n    _classCallCheck(this, PModal);\n\n    _this = _super.call(this, props);\n    _this.selectedList = [];\n    _this.selectedList = [];\n    _this.cancelSelect = _this.cancelSelect.bind(_assertThisInitialized(_this));\n    _this.confirmSelect = _this.confirmSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PModal, [{\n    key: \"cancelSelect\",\n    value: function cancelSelect() {\n      this.selectedList = [];\n    }\n  }, {\n    key: \"confirmSelect\",\n    value: function confirmSelect() {\n      var onConfirm = this.props.onConfirm;\n      onConfirm(this.selectedList);\n      this.selectedList = [];\n      this.cancelSelect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        transparent: true,\n        visible: !!this.props.isModalVisible,\n        onRequestClose: function onRequestClose() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.modalMask,\n        activeOpacity: 1,\n        underlayColor: \"#00000077\",\n        onPress: this.cancelSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [styles.modal || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 56\n        }\n      }, this.props.title)), React.createElement(View, {\n        style: styles.scrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: [styles.buttonView || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableHighlight, {\n        underlayColor: \"transparent\",\n        activeOpacity: 0.8,\n        onPress: this.cancelSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: [styles.modalButton || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      }, this.props.cancelText))), React.createElement(TouchableHighlight, {\n        underlayColor: \"transparent\",\n        activeOpacity: 0.8,\n        onPress: this.confirmSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: [styles.modalButton, styles.confirmButton || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText || {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }\n      }, this.props.confirmText)))))))));\n    }\n  }]);\n\n  return PModal;\n}(React.Component);\n\nexport default PModal;\nvar Color = {\n  disableColor: '#eaeaea',\n  main: '#40cca2'\n};\nvar styles = StyleSheet.create({\n  selectedView: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  selectedItem: {\n    margin: 4,\n    borderWidth: 2 / scale,\n    borderRadius: 6,\n    borderColor: '#aaa',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    backgroundColor: '#f6f6f6'\n  },\n  addItem: {\n    padding: 7\n  },\n  disableColor: {\n    backgroundColor: Color.disableColor\n  },\n  labelText: {\n    padding: 6,\n    fontSize: 14,\n    lineHeight: 14,\n    maxWidth: 300\n  },\n  closeContainer: {\n    padding: 8,\n    borderLeftWidth: 2 / scale,\n    borderLeftColor: '#c8c8c8'\n  },\n  closeIcon: {\n    width: 10,\n    height: 10\n  },\n  addIcon: {\n    width: 12,\n    height: 12\n  },\n  modalMask: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#00000077'\n  },\n  modalContainer: {},\n  modal: {\n    height: height * 0.6,\n    width: width * 0.6,\n    overflow: 'hidden',\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  },\n  title: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderBottomWidth: 2 / scale,\n    borderBottomColor: '#bbb'\n  },\n  titleText: {\n    fontSize: 18,\n    lineHeight: 20\n  },\n  scrollView: {\n    height: height * 0.6 - 80\n  },\n  buttonView: {\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  modalButton: {\n    height: 40,\n    width: width * 0.3,\n    paddingLeft: 20,\n    paddingRight: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Color.main\n  },\n  modalItem: {\n    height: 50,\n    paddingHorizontal: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottomWidth: 2 / scale,\n    borderBottomColor: '#bbb'\n  },\n  modalText: {\n    fontSize: 16,\n    width: width * 0.6 - 70\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  confirmButton: {\n    borderLeftWidth: 2 / scale,\n    borderLeftColor: '#fff'\n  },\n  outerCircle: {\n    borderWidth: 2 / scale,\n    borderColor: '#888',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  enableCircle: {\n    borderColor: Color.main\n  },\n  innerCircle: {\n    backgroundColor: Color.main,\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  disableText: {\n    color: '#999'\n  }\n});","map":{"version":3,"sources":["C:/Users/yonimdo/Documents/Workspace/Yonimdo/Parablas/components/pTransparentModal.tsx"],"names":["React","window","Dimensions","get","width","height","scale","PModal","props","selectedList","cancelSelect","bind","confirmSelect","onConfirm","isModalVisible","flex","styles","modalMask","modalContainer","modal","title","titleText","scrollView","buttonView","modalButton","buttonText","cancelText","confirmButton","confirmText","Component","Color","disableColor","main","StyleSheet","create","selectedView","flexDirection","justifyContent","alignItems","flexWrap","selectedItem","margin","borderWidth","borderRadius","borderColor","overflow","backgroundColor","addItem","padding","labelText","fontSize","lineHeight","maxWidth","closeContainer","borderLeftWidth","borderLeftColor","closeIcon","addIcon","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","paddingRight","modalItem","modalText","color","outerCircle","enableCircle","innerCircle","disableText"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { View, Text, Modal, ScrollView, TouchableHighlight, Dimensions, StyleSheet } from 'react-native';\r\nconst window = Dimensions.get('window');\r\nconst { width, height, scale } = window;\r\n\r\nclass PModal extends React.Component<any, any> {\r\n    selectedList: Array<any> = [];\r\n    \r\n    constructor(props: any) {\r\n        super(props);\r\n        this.selectedList = [];\r\n        this.cancelSelect = this.cancelSelect.bind(this);\r\n        this.confirmSelect = this.confirmSelect.bind(this);\r\n    }\r\n\r\n    cancelSelect() {\r\n        this.selectedList = [];\r\n    }\r\n    confirmSelect() {\r\n        const { onConfirm } = this.props;\r\n        onConfirm(this.selectedList);\r\n        this.selectedList = [];\r\n        this.cancelSelect();\r\n    }\r\n    render() {\r\n        return (\r\n        <Modal\r\n            transparent={true}\r\n            visible={!!this.props.isModalVisible}\r\n            onRequestClose={() => { }}>\r\n            <View style={{ flex: 1 }}>\r\n                <TouchableHighlight\r\n                    style={styles.modalMask}\r\n                    activeOpacity={1}\r\n                    underlayColor=\"#00000077\"\r\n                    onPress={this.cancelSelect}>\r\n                    <View style={styles.modalContainer}>\r\n                        <View style={[styles.modal || {}]}>\r\n                            <View style={styles.title}><Text style={styles.titleText}>{this.props.title}</Text></View>\r\n                            <View style={styles.scrollView}>\r\n                                <ScrollView>\r\n\r\n                                </ScrollView>\r\n                            </View>\r\n                            <View style={[styles.buttonView || {}]}>\r\n                                <TouchableHighlight\r\n                                    underlayColor=\"transparent\"\r\n                                    activeOpacity={0.8}\r\n                                    onPress={this.cancelSelect}>\r\n                                    <View style={[styles.modalButton || {}]}>\r\n                                        <Text style={[styles.buttonText || {}]}>{this.props.cancelText}</Text>\r\n                                    </View>\r\n                                </TouchableHighlight>\r\n                                <TouchableHighlight\r\n                                    underlayColor=\"transparent\"\r\n                                    activeOpacity={0.8}\r\n                                    onPress={this.confirmSelect}>\r\n                                    <View style={[styles.modalButton, styles.confirmButton || {}]}>\r\n                                        <Text style={[styles.buttonText || {}]}>{this.props.confirmText}</Text>\r\n                                    </View>\r\n                                </TouchableHighlight>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            </View>\r\n        </Modal>);\r\n    }\r\n}\r\n\r\nexport default PModal\r\n\r\nconst Color = {\r\n    disableColor: '#eaeaea',\r\n    main: '#40cca2'\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    selectedView: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    selectedItem: {\r\n        margin: 4,\r\n        borderWidth: 2 / scale,\r\n        borderRadius: 6,\r\n        borderColor: '#aaa',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#f6f6f6'\r\n    },\r\n    addItem: {\r\n        padding: 7\r\n    },\r\n    disableColor: {\r\n        backgroundColor: Color.disableColor\r\n    },\r\n    labelText: {\r\n        padding: 6,\r\n        fontSize: 14,\r\n        lineHeight: 14,\r\n        maxWidth: 300\r\n    },\r\n    closeContainer: {\r\n        padding: 8,\r\n        borderLeftWidth: 2 / scale,\r\n        borderLeftColor: '#c8c8c8'\r\n    },\r\n    closeIcon: {\r\n        width: 10,\r\n        height: 10\r\n    },\r\n    addIcon: {\r\n        width: 12,\r\n        height: 12\r\n    },\r\n    modalMask: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#00000077'\r\n    },\r\n    modalContainer: {},\r\n    modal: {\r\n        height: height * 0.6,\r\n        width: width * 0.6,\r\n        overflow: 'hidden',\r\n        borderRadius: 10,\r\n        backgroundColor: '#fff'\r\n    },\r\n    title: {\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 2 / scale,\r\n        borderBottomColor: '#bbb'\r\n    },\r\n    titleText: {\r\n        fontSize: 18,\r\n        lineHeight: 20\r\n    },\r\n    scrollView: {\r\n        height: height * 0.6 - 80\r\n    },\r\n    buttonView: {\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 10,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    modalButton: {\r\n        height: 40,\r\n        width: width * 0.3,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: Color.main\r\n    },\r\n    modalItem: {\r\n        height: 50,\r\n        paddingHorizontal: 20,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottomWidth: 2 / scale,\r\n        borderBottomColor: '#bbb'\r\n    },\r\n    modalText: {\r\n        fontSize: 16,\r\n        width: width * 0.6 - 70\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 16\r\n    },\r\n    confirmButton: {\r\n        borderLeftWidth: 2 / scale,\r\n        borderLeftColor: '#fff'\r\n    },\r\n    outerCircle: {\r\n        borderWidth: 2 / scale,\r\n        borderColor: '#888',\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 10,\r\n        overflow: 'hidden',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    enableCircle: {\r\n        borderColor: Color.main\r\n    },\r\n    innerCircle: {\r\n        backgroundColor: Color.main,\r\n        width: 16,\r\n        height: 16,\r\n        borderRadius: 8,\r\n        overflow: 'hidden'\r\n    },\r\n    disableText: {\r\n        color: '#999'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}